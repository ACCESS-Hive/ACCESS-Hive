name: Test
on:
  # push:
  #   branches: 
  #     - test
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions: 
  contents: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: publish-website
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: main
      
      - name: Create temp branch for full deployment # main, development and PRs
        shell: bash
        run: |
          curl -H 'Authorization: token ${{ secrets.ADMIN_TOKEN }}'
          tmp_branch=tmp_${RANDOM}
          git branch $tmp_branch
          while [ $? != 0 ]; do
            if [ i -gt 5 ]; then
              echo "Failed to create temp branch."
              exit 1
            else
              ((i++))
            fi
            tmp_branch=tmp_${RANDOM}
            git branch $tmp_branch
          done
          pr_list=$(curl -s https://api.github.com/repos/ACCESS-Hive/access-hive.github.io/pulls?state=opened \
          | jq '.[] | .head | select(.label!="ACCESS-Hive:development").sha')
          while [ $? != 0 ]; do
            if [ i -gt 5 ]; then
              echo "Failed to fetch opened PRs."
              exit 1
            else
              ((i++))
            fi
            pr_list=$(curl -s https://api.github.com/repos/ACCESS-Hive/access-hive.github.io/pulls?state=opened \
            | jq '.[] | .head | select(.label!="ACCESS-Hive:development").sha')
          done
          mkdir -p pr-preview
          cp -r . pr-preview
          cd pr-preview
          git checkout -b pr-preview
          git push -u origin pr-preview
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: checkout 
      
      - uses: actions/setup-python@v4
        with:
          python-version: 3.x

      - name: Install dependencies
        run:  pip install -r requirements.txt
      
      - name: Build mkdocs website
        run: mkdocs build -f mkdocs.yml -d website
          
      - name: Deploy to gh-pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          token: ${{ secrets.ADMIN_TOKEN }}
          folder: website
          branch: ${{ env.TARGET_BRANCH }}
          clean-exclude: |
            pr-preview/
            development_website/